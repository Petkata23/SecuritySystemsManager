@model IEnumerable<SecuritySystemsManagerMVC.ViewModels.SecuritySystemOrderDetailsVm>
@using SecuritySystemsManager.Shared.Enums

@{
    ViewData["Title"] = "Orders";
    bool isClient = User.IsInRole("Client");
    bool isAdminOrManager = User.IsInRole("Admin") || User.IsInRole("Manager");
    bool isTechnician = User.IsInRole("Technician");
    bool canCreateOrder = !isTechnician; // Technicians cannot create orders
    
    var hasOrders = Model != null && Model.Any();
    var pendingCount = hasOrders ? Model.Count(o => o.Status == OrderStatus.Pending) : 0;
    var inProgressCount = hasOrders ? Model.Count(o => o.Status == OrderStatus.InProgress) : 0;
    var completedCount = hasOrders ? Model.Count(o => o.Status == OrderStatus.Completed) : 0;
    var cancelledCount = hasOrders ? Model.Count(o => o.Status == OrderStatus.Cancelled) : 0;
    var totalCount = hasOrders ? Model.Count() : 0;
}

@section Styles {
    <link rel="stylesheet" href="~/css/orders-list.css" asp-append-version="true" />
}

<div class="orders-container">
    <!-- Enhanced Header Banner -->
    <div class="orders-banner">
        <div class="banner-content">
            <div class="banner-text">
                <h1 class="banner-title">Security System Orders</h1>
                <p class="banner-description">
                    @if (hasOrders)
                    {
                        <span>Manage and track all your security system installations and maintenance orders.</span>
                    }
                    else
                    {
                        <span>Start securing your properties by creating your first security system order.</span>
                    }
                </p>
            </div>
            <div class="banner-actions">
                @if (canCreateOrder)
                {
                    <a asp-action="Create" class="btn btn-primary btn-create-banner">
                        <i class="bi bi-plus-lg me-2"></i>New Order
                    </a>
                }
                @if (hasOrders)
                {
                    <div class="order-counts">
                        <div class="count-item">
                            <span class="count-value">@totalCount</span>
                            <span class="count-label">Total</span>
                        </div>
                        <div class="count-divider"></div>
                        <div class="count-item @(pendingCount > 0 ? "has-count" : "")">
                            <span class="count-value">@pendingCount</span>
                            <span class="count-label">Pending</span>
                        </div>
                        <div class="count-divider"></div>
                        <div class="count-item @(inProgressCount > 0 ? "has-count" : "")">
                            <span class="count-value">@inProgressCount</span>
                            <span class="count-label">In Progress</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    @if (hasOrders)
    {
        <!-- Filter Card -->
        <div class="card filter-card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5><i class="bi bi-funnel"></i> Filter Orders</h5>
                <button class="btn btn-sm btn-outline-secondary btn-filter-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                    <i class="bi bi-sliders me-1"></i>Toggle Filters
                </button>
            </div>
            <div class="collapse" id="filterCollapse">
                <div class="card-body">
                    <form id="filterForm" method="get" class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Status</label>
                            <select id="statusFilter" class="form-select">
                                <option value="">All Statuses</option>
                                <option value="Pending">Pending</option>
                                <option value="InProgress">In Progress</option>
                                <option value="Completed">Completed</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Date Range</label>
                            <div class="input-group">
                                <input type="date" id="startDate" class="form-control" placeholder="Start Date">
                                <span class="input-group-text">to</span>
                                <input type="date" id="endDate" class="form-control" placeholder="End Date">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Search</label>
                            <div class="input-group">
                                <input type="text" id="searchInput" class="form-control" placeholder="Search orders...">
                                <button class="btn btn-primary" type="button" id="searchBtn">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Orders Table Card -->
        <div class="card orders-card" id="ordersTableContainer">
            @await Html.PartialAsync("_OrdersTable", Model)
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="bi bi-shield-check"></i>
            </div>
            <h4>No Orders Yet</h4>
            <p>You haven't created any security system orders yet. Start by creating your first order to secure your properties.</p>
            @if (canCreateOrder)
            {
                <a asp-action="Create" class="btn btn-primary btn-create-first">
                    <i class="bi bi-plus-lg me-2"></i>Create Your First Order
                </a>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        // Pass filter values from server to JavaScript
        var searchTermFilter = '@ViewBag.SearchTermFilter';
        var startDateFilter = '@ViewBag.StartDateFilter';
        var endDateFilter = '@ViewBag.EndDateFilter';
        var statusFilter = '@ViewBag.StatusFilter';
    </script>
    <script src="~/js/order-list.js" asp-append-version="true"></script>
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.InProgress => "primary",
            OrderStatus.Completed => "success",
            OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
    
    string GetStatusDisplayName(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.InProgress => "In Progress",
            _ => status.ToString()
        };
    }
    
    string GetStatusIcon(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bi-hourglass-split",
            OrderStatus.InProgress => "bi-gear-wide-connected",
            OrderStatus.Completed => "bi-check-circle",
            OrderStatus.Cancelled => "bi-x-circle",
            _ => "bi-question-circle"
        };
    }
} 