@model IEnumerable<SecuritySystemsManagerMVC.ViewModels.SecuritySystemOrderDetailsVm>
@using SecuritySystemsManager.Shared.Enums

@{
    ViewData["Title"] = "Orders";
    bool isClient = User.IsInRole("Client");
    bool isAdminOrManager = User.IsInRole("Admin") || User.IsInRole("Manager");
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0">All Orders</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-lg me-2"></i>New Order
    </a>
</div>

<div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Filter Orders</h5>
        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
            <i class="bi bi-funnel me-2"></i>Toggle Filters
        </button>
    </div>
    <div class="collapse" id="filterCollapse">
        <div class="card-body">
            <form id="filterForm" method="get" class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Status</label>
                    <select id="statusFilter" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="Pending">Pending</option>
                        <option value="InProgress">In Progress</option>
                        <option value="Completed">Completed</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Date Range</label>
                    <div class="input-group">
                        <input type="date" id="startDate" class="form-control" placeholder="Start Date">
                        <span class="input-group-text">to</span>
                        <input type="date" id="endDate" class="form-control" placeholder="End Date">
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Search</label>
                    <div class="input-group">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search orders...">
                        <button class="btn btn-primary" type="button" id="searchBtn">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Manage Orders</h5>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="ordersTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Client</th>
                        <th>Requested Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr data-status="@order.Status" data-date="@order.RequestedDate.ToString("yyyy-MM-dd")">
                            <td>#@order.Id</td>
                            <td>@order.Title</td>
                            <td>@(order.Client?.FirstName + " " + order.Client?.LastName)</td>
                            <td>@order.RequestedDate.ToShortDateString()</td>
                            <td>
                                <span class="badge bg-@GetStatusBadgeClass(order.Status)">
                                    @GetStatusDisplayName(order.Status)
                                </span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info">
                                        <i class="bi bi-info-circle"></i>
                                    </a>
                                    @if (isAdminOrManager)
                                    {
                                        <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-sm btn-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@order.Id" class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-0">
                @{
                    int totalPages = ViewBag.TotalPages ?? 1;
                    int currentPage = ViewBag.CurrentPage ?? 1;
                    
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="List" asp-route-pageNumber="@(currentPage - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" asp-action="List" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }
                    
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="List" asp-route-pageNumber="@(currentPage + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter functionality
            $("#statusFilter, #startDate, #endDate").on("change", filterOrders);
            $("#searchBtn").on("click", filterOrders);
            $("#searchInput").on("keyup", function(e) {
                if (e.key === "Enter") {
                    filterOrders();
                }
            });
            
            function filterOrders() {
                const status = $("#statusFilter").val().toLowerCase();
                const startDate = $("#startDate").val();
                const endDate = $("#endDate").val();
                const searchText = $("#searchInput").val().toLowerCase();
                
                $("#ordersTable tbody tr").each(function() {
                    const rowStatus = $(this).data("status").toString().toLowerCase();
                    const rowDate = $(this).data("date");
                    const rowText = $(this).text().toLowerCase();
                    
                    let statusMatch = status === "" || rowStatus.includes(status);
                    let dateMatch = true;
                    
                    if (startDate && rowDate < startDate) {
                        dateMatch = false;
                    }
                    
                    if (endDate && rowDate > endDate) {
                        dateMatch = false;
                    }
                    
                    let textMatch = searchText === "" || rowText.includes(searchText);
                    
                    if (statusMatch && dateMatch && textMatch) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(SecuritySystemsManager.Shared.Enums.OrderStatus status)
    {
        return status switch
        {
            SecuritySystemsManager.Shared.Enums.OrderStatus.Pending => "warning",
            SecuritySystemsManager.Shared.Enums.OrderStatus.InProgress => "primary",
            SecuritySystemsManager.Shared.Enums.OrderStatus.Completed => "success",
            SecuritySystemsManager.Shared.Enums.OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
    
    string GetStatusDisplayName(SecuritySystemsManager.Shared.Enums.OrderStatus status)
    {
        return status switch
        {
            SecuritySystemsManager.Shared.Enums.OrderStatus.InProgress => "In Progress",
            _ => status.ToString()
        };
    }
} 