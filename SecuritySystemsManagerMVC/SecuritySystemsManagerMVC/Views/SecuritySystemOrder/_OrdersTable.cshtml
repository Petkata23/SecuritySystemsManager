@using SecuritySystemsManager.Shared.Enums
@model IEnumerable<SecuritySystemsManagerMVC.ViewModels.SecuritySystemOrderDetailsVm>

@{
    var isClient = User.IsInRole("Client");
    var isTechnician = User.IsInRole("Technician");
    var isAdminOrManager = User.IsInRole("Admin") || User.IsInRole("Manager");
    var canCreateOrder = User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Client");
    var hasOrdersBeforeFilter = ViewBag.HasOrdersBeforeFilter ?? false;
}

@if (Model.Any())
{
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5><i class="bi bi-list-check"></i> Manage Orders</h5>
            <div class="header-actions">
                <div class="btn-group view-toggle" role="group" aria-label="View toggle">
                    <button type="button" class="btn btn-outline-primary active" id="tableViewBtn">
                        <i class="bi bi-table"></i> Table
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="cardViewBtn">
                        <i class="bi bi-grid-3x3-gap"></i> Cards
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Table View -->
    <div class="card-body p-0" id="tableView">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="ordersTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Client</th>
                        <th>Requested Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr data-status="@order.Status" data-date="@order.RequestedDate.ToString("yyyy-MM-dd")">
                            <td><span class="order-id">#@order.Id</span></td>
                            <td class="order-title">@order.Title</td>
                            <td>
                                <div class="client-name">
                                    @if (order.Client != null)
                                    {
                                        <div class="client-avatar">
                                            @if (!string.IsNullOrEmpty(order.Client.ProfileImage))
                                            {
                                                <img src="@order.Client.ProfileImage" alt="@order.Client.FirstName @order.Client.LastName">
                                            }
                                            else
                                            {
                                                @(order.Client.FirstName?.Substring(0, 1))@(order.Client.LastName?.Substring(0, 1))
                                            }
                                        </div>
                                        <span>@(order.Client.FirstName + " " + order.Client.LastName)</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not assigned</span>
                                    }
                                </div>
                            </td>
                            <td class="order-date">
                                <i class="bi bi-calendar3 me-1"></i>
                                @order.RequestedDate.ToString("MMM dd, yyyy")
                            </td>
                            <td>
                                <span class="status-badge bg-@GetStatusBadgeClass(order.Status)">
                                    <i class="bi @GetStatusIcon(order.Status)"></i>
                                    @GetStatusDisplayName(order.Status)
                                </span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info btn-action" data-bs-toggle="tooltip" title="View Details">
                                        <i class="bi bi-info-circle"></i>
                                    </a>
                                    @if (isAdminOrManager)
                                    {
                                        <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-sm btn-primary btn-action" data-bs-toggle="tooltip" title="Edit Order">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@order.Id" class="btn btn-sm btn-danger btn-action" data-bs-toggle="tooltip" title="Delete Order">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
    <!-- Card View (hidden by default) -->
    <div class="card-body p-3 d-none" id="cardView">
        <div class="row">
            @foreach (var order in Model)
            {
                <div class="col-xl-4 col-md-6 mb-4 order-card-col" data-status="@order.Status" data-date="@order.RequestedDate.ToString("yyyy-MM-dd")">
                    <div class="order-card-item">
                        <div class="order-card-header status-@order.Status.ToString().ToLower()">
                            <span class="status-indicator">
                                <i class="bi @GetStatusIcon(order.Status)"></i>
                                @GetStatusDisplayName(order.Status)
                            </span>
                            <span class="order-number">#@order.Id</span>
                        </div>
                        <div class="order-card-body">
                            <h5 class="order-card-title">@order.Title</h5>
                            <div class="order-card-info">
                                <div class="info-row">
                                    <i class="bi bi-person"></i>
                                    <span>
                                        @if (order.Client != null)
                                        {
                                            @(order.Client.FirstName + " " + order.Client.LastName)
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not assigned</span>
                                        }
                                    </span>
                                </div>
                                <div class="info-row">
                                    <i class="bi bi-calendar3"></i>
                                    <span>@order.RequestedDate.ToString("MMM dd, yyyy")</span>
                                </div>
                                @if (!string.IsNullOrEmpty(order.Description))
                                {
                                    <div class="info-row description">
                                        <i class="bi bi-card-text"></i>
                                        <span>@(order.Description.Length > 50 ? order.Description.Substring(0, 50) + "..." : order.Description)</span>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="order-card-footer">
                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-info">
                                <i class="bi bi-info-circle me-1"></i> Details
                            </a>
                            @if (isAdminOrManager)
                            {
                                <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil me-1"></i> Edit
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    
    <!-- Pagination -->
    <div class="pagination-container">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-0">
                @{
                    int totalPages = ViewBag.TotalPages ?? 1;
                    int currentPage = ViewBag.CurrentPage ?? 1;
                    bool hasFilters = !string.IsNullOrEmpty(ViewBag.SearchTermFilter?.ToString()) || 
                                    !string.IsNullOrEmpty(ViewBag.StartDateFilter?.ToString()) || 
                                    !string.IsNullOrEmpty(ViewBag.EndDateFilter?.ToString()) ||
                                    !string.IsNullOrEmpty(ViewBag.StatusFilter?.ToString());
                    
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        @if (hasFilters)
                        {
                            <a class="page-link" asp-action="FilterOrders" 
                               asp-route-pageNumber="@(currentPage - 1)"
                               asp-route-searchTerm="@ViewBag.SearchTermFilter"
                               asp-route-startDate="@ViewBag.StartDateFilter"
                               asp-route-endDate="@ViewBag.EndDateFilter"
                               asp-route-status="@ViewBag.StatusFilter"
                               aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        }
                        else
                        {
                            <a class="page-link" asp-action="List" asp-route-pageNumber="@(currentPage - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        }
                    </li>
                    
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            @if (hasFilters)
                            {
                                <a class="page-link" asp-action="FilterOrders" 
                                   asp-route-pageNumber="@i"
                                   asp-route-searchTerm="@ViewBag.SearchTermFilter"
                                   asp-route-startDate="@ViewBag.StartDateFilter"
                                   asp-route-endDate="@ViewBag.EndDateFilter"
                                   asp-route-status="@ViewBag.StatusFilter">@i</a>
                            }
                            else
                            {
                                <a class="page-link" asp-action="List" asp-route-pageNumber="@i">@i</a>
                            }
                        </li>
                    }
                    
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        @if (hasFilters)
                        {
                            <a class="page-link" asp-action="FilterOrders" 
                               asp-route-pageNumber="@(currentPage + 1)"
                               asp-route-searchTerm="@ViewBag.SearchTermFilter"
                               asp-route-startDate="@ViewBag.StartDateFilter"
                               asp-route-endDate="@ViewBag.EndDateFilter"
                               asp-route-status="@ViewBag.StatusFilter"
                               aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        }
                        else
                        {
                            <a class="page-link" asp-action="List" asp-route-pageNumber="@(currentPage + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        }
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <!-- Empty State -->
    <div class="card-body">
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="bi bi-shield-lock"></i>
            </div>
            <h4>No Orders Found</h4>
            <p>
                @if (hasOrdersBeforeFilter)
                {
                    <!-- There are orders before filtering, so this is a filter result -->
                    <span>No orders match your current filter criteria. Try adjusting your search terms, date range, or status filter.</span>
                }
                else
                {
                    <!-- No orders exist at all -->
                    @if (isClient)
                    {
                        <span>You haven't placed any security system orders yet. Create your first order to get started with securing your property.</span>
                    }
                    else if (isTechnician)
                    {
                        <span>There are no orders assigned to you at the moment. Contact your manager to get assigned to orders.</span>
                    }
                    else
                    {
                        <span>There are no security system orders in the system yet. Create the first order to start managing security installations.</span>
                    }
                }
            </p>
            @if (canCreateOrder && !hasOrdersBeforeFilter)
            {
                <a asp-action="Create" class="btn btn-primary btn-create-first">
                    <i class="bi bi-plus-lg me-2"></i>Create Your First Order
                </a>
            }
        </div>
    </div>
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.InProgress => "primary",
            OrderStatus.Completed => "success",
            OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
    
    string GetStatusDisplayName(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.InProgress => "In Progress",
            _ => status.ToString()
        };
    }
    
    string GetStatusIcon(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bi-hourglass-split",
            OrderStatus.InProgress => "bi-gear-wide-connected",
            OrderStatus.Completed => "bi-check-circle",
            OrderStatus.Cancelled => "bi-x-circle",
            _ => "bi-question-circle"
        };
    }
} 